<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://dreamcatcher.land/blog</id>
    <title>Dreamcatcher Blog</title>
    <updated>2022-09-28T01:08:57.000Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://dreamcatcher.land/blog"/>
    <subtitle>Dreamcatcher Blog</subtitle>
    <icon>https://dreamcatcher.land/img/favicon.ico</icon>
    <entry>
        <title type="html"><![CDATA[drafts/App Complexity]]></title>
        <id>/drafts/App Complexity</id>
        <link href="https://dreamcatcher.land/blog/drafts/App Complexity"/>
        <updated>2022-09-28T01:08:57.000Z</updated>
        <content type="html"><![CDATA[<p><img loading="lazy" src="/assets/images/AppComplexityWeb2VsWeb3-1a4658ef4918bfdcca6e95bebbd6ae4a.png" width="1338" height="1162" class="img_ev3q"></p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Background for The Pool Process]]></title>
        <id>/drafts/Background Pool Process</id>
        <link href="https://dreamcatcher.land/blog/drafts/Background Pool Process"/>
        <updated>2022-09-28T01:08:57.000Z</updated>
        <summary type="html"><![CDATA[Target]]></summary>
        <content type="html"><![CDATA[<h1>IN DRAFT</h1><h2 class="anchor anchorWithStickyNavbar_LWe7" id="target">Target<a class="hash-link" href="#target" title="Direct link to heading">​</a></h2><p><a href="https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/blob/master/website/nfas/Ideas/I11.md" target="_blank" rel="noopener noreferrer">I11 Request-Idea</a></p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="inherits">Inherits<a class="hash-link" href="#inherits" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dependencies">Dependencies<a class="hash-link" href="#dependencies" title="Direct link to heading">​</a></h2><h2 class="anchor anchorWithStickyNavbar_LWe7" id="why-ask-for-requests-and-ideas-to-be-divided">Why ask for Requests and Ideas to be divided?<a class="hash-link" href="#why-ask-for-requests-and-ideas-to-be-divided" title="Direct link to heading">​</a></h2><p>It's not a vague vs precise thing. It's headmark vs compass bearing thing.</p><p>The general rule is that you should always know what your '1-up' is trying to do, regardless is what he's telling you to do. It's recognising that centralised command and control is inferior to decentralised command and control, but by decentralising, you could give misfires. You need to let the guys know not only what you think they need to do, but why you've asked them to do it.</p><p>So the strategic intent is the high level "Start with why". That's needed because it's not possible to write the tactical intent (the compass bearing) in sufficient detail to avoid fuck ups by itself, you need to give a headmark. But it's not enough to just state why you're trying to do something (the headmark), without giving some guidance.</p><p>The Ratcatchers and Regulators thing comes from Admiral Beatty and Admiral Jellicoe in WW1. Beatty was the ratcatcher, and didn't plan ahead at all well, and gave full reign to the captains under his command. Didn't go well, as they each had a different idea of what the overall objective was, and so perfectly executed their own commands, just in different directions. Jellicoe was the Regulator, and literally had a huge book of rules which all the captains under his command had to follow, and so was exceptionally brittle as soon as the hun came over the horizon.</p><p>The middle ground is the way. Don't over specify, don't leave people in doubt of what the whole point of the thing is.</p><p>So it's fundamentally different from nested Requests, in that strategy is about why, then there's a phase change to tactical which is about how, what, where etc.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Packet Switched Invention Networks]]></title>
        <id>/2022/08/22/packet-switched-invention-networks</id>
        <link href="https://dreamcatcher.land/blog/2022/08/22/packet-switched-invention-networks"/>
        <updated>2022-08-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[There is an analogy to be drawn between packet switched networks, circuit switched networks, and dedicated lines and the progression of innovation networks.]]></summary>
        <content type="html"><![CDATA[<p>There is an analogy to be drawn between packet switched networks, circuit switched networks, and dedicated lines and the progression of innovation networks.</p><p><a href="https://www.livinginternet.com/i/iw_packet_inv.htm#:~:text=The%20packet%20switching%20concept%20was,world's%20first%20packet%20switching%20network" target="_blank" rel="noopener noreferrer">https://www.livinginternet.com/i/iw_packet_inv.htm#:~:text=The%20packet%20switching%20concept%20was,world's%20first%20packet%20switching%20network</a>.</p><p>Packet switching on networks has two major disadvantages:</p><ol><li>Discontinuity</li><li>Conversions - always on dedicated innovation need to be formal and convert to a standard form, nor be checksummed by QA before being executed on.</li></ol><p>Checksumming is performed by QA</p><p>The network is the innovator</p><p>Model innovation as a series of information circuits with unreliable operation, delays, lost packets, differing costs. Show how multihop can break a packet down and transport by alternate route, then reassemble.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Blockchain Without Currency]]></title>
        <id>/2022/05/14/blockchain-without-currency</id>
        <link href="https://dreamcatcher.land/blog/2022/05/14/blockchain-without-currency"/>
        <updated>2022-05-14T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><img loading="lazy" src="/assets/images/blockchain-without-currency-354cf8c79bb19bcf7236038dd19db2f0.jpg" width="2048" height="1365" class="img_ev3q"></p><p>The destiny of blockchain is to model the entire world. What point then is any instrinsic currency ?</p><p>Object oriented programming is the dominant form of computer modelling.</p><p>Our purpose is to facilitate trade between all currencies and all objects, predominantly labour, technology, customers, and assets.</p><p>With enough granularity and autonomous agents, we can get back to barter.</p><p>When we first started towards the Dreamcatcher, we wanted software defined companies, to cure the ailments we had in our current publicly listed companies. Now we're saying that each object comes with a software defined company attached via API.</p><p>Why aren't software defined companies popular ? What are manually operated companies the favourite ? Is there some relationship between the granularity of a thing before it becomes programmable ?</p><p>Points</p><ol><li>Future of all currencies is to be replaced with barter</li><li>Any crypto currency is arbitrary anyway</li><li>Object models allow direct trading of the item</li><li>We can model any currency, with provenance, and fractionalize it to nano portions</li><li>miners can earn whatever currency they wish</li><li>liquid exchanges let you swap for any other currency</li><li>There is no currency since the value we are creating is captured in the NFTs that make up the system</li></ol><p>Given that we built this whole thing on non-fungibility and modelling of the real world, it makes no sense to have a currency of our own.
Any arbitrary fungible unit of value that has no internal control mechanism will periodically crash.
With no regulation, this cycle is accelerated, as the system can be used as a 'bigger fool' scheme, but is harder to squash due to its distributed nature, with a multitude of bad actors having no coordination except the same pattern of ill intent.</p><p>Systems that launch with a 'shares' like nature, such as ICOs and other "Initial <!-- -->*<!-- -->" offerings bake in their demise from inception by setting the exectations and incentives of multiple powerful actors in the system.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Innovation Information Gradients]]></title>
        <id>/2021/12/19/information-gradients</id>
        <link href="https://dreamcatcher.land/blog/2021/12/19/information-gradients"/>
        <updated>2021-12-19T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p>The question was: "When asked "what does the Dreamcatcher do ?" how can we include this graph at the heart of what it does ? "oh it makes things fairer" isn't very precise. Showing the wage theft gap as the addressable market for the Dreamcatcher says it has a lot of potential, in provable numbers, I think ?"</p><p>I think we're missing the main point if we talk about removing power from Capital. We're not leading a revolution - we're tuning an old, large engine that could do so much better... But we need to convince Capital and Labour to make it work. We can't do that by being anti-capital.</p><p><img loading="lazy" src="/assets/images/Real_GDP_Real_Wages_and_Trade_Policies_in_the_U.S._1947_2014-dc0fc03b9ec821ed0c14048af24b4769.png" width="861" height="691" class="img_ev3q"></p><p>Bear with me now, as half an eye to turning this into a blog-piece, and typing this on a phone...
Previously we had two main economic models:</p><p>Labour dominant: Communism at it's core was to remove influence from capital and rent seekers towards Labour. To do that, it was necessary to centralise as there was no pracical alternative. Guessing I don't need to say why centralisation is bad, other than summarising: few brains = bad; many brains = good.</p><p>Capital dominant: Capitalism aimed to decentralise, but failed because of network effects. The more Capital produced, the more than can be produced, and so there's (all else being equal), a exponential effect that accumulates Capital over time. So you inevitably end up with small and reducing group of Capital holders. Not helpful. Again, few brains = bad; many brains = good.</p><p>[Sidenote - this distinction between Capital and Labour is outdated, but going to use it as a traditional framework below. By example, the four of us are working together now. Who's Capital and who's Labour? Say if we hire a guy at half pay, and half Attribution? Who's Capital and who's Labour then? The point is the differentiation is in reality blurred - there just hasn't been a practical way to recognise that until now.]<!-- -->
So what we're proposing is a third way.</p><p>Many brains &lt;-&gt; Many brains = genius.</p><p>NB, no one is losing out here. Both Capital and Labour are improving efficiency. Laying to one side arguments that benefit is relative to your immediate neighbours which you compare yourself with, improving efficiency has got to be a good thing...
AXIOM - Innovation is a good, as of and by itself. Making Innovation more efficient is therefore necessarily good.
So to test this, here's a thought experiment. Two people, one is the Capital guy, the other the Labour guy.</p><p>It's important to note that there is a symetry there. The Capital guy can fire the Labour guy, and the Labour guy can fire the Capital guy (by resigning). But there's an asymetry of information - the information gradient.</p><p>Have talked about this Information Gradient a bit, but this is more important than it may seem. These two don't live in the same world. Capital guy knows about capital; Labour guy knows how to build stuff to make a ROI. Capital guy knows very little about Labour guy's world; Labour guy knows little about Capital guy's world. So we're now approaching a zero-sum game. Each will be looking out for themselves (of course) - even though it would be to the benefit of both if the Project succeeds.
Therefore:
AXIOM - Wherever that's an Information Gradient, there's an inefficient market.
To dig in to the world as seen by each of the players:</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="capital-guy">Capital Guy<a class="hash-link" href="#capital-guy" title="Direct link to heading">​</a></h2><p>The Capital guy is trying to increase his pile by using it to build Stuff, sell Stuff, and make Return on Capital Employed. But he doesn't have the skills, so he needs to give it to some CEO, who will then go off and hire a bunch of people to execute on an idea. To find the CEO he's probably having to look through his local network to N levels of separation, depending on his patience. In my experience, N=2, which is pants.</p><p>He then has to offload his own aim of building his pile to this CEO guy, who then goes out to look for talent to build the idea. That's a fraught process, and I'd argue close to being random selection, based on some filter. So the Capital guy ends up worrying about his Contribution being spanked on marketing socks (Tom, Ben, you get the reference), "Tribe Two" consultants out to gouge a day-rate (Tom, yup, you'll also get the reference), and because of the Information Gradient, Capital Guy has no idea whether his pile will increase or disappear.</p><p>Worth thinking about that for a moment. Capital guy has close to zero control about whether his Contribution will provide a Return, beyond, well, you know, shouting, firing people, closing the company etc.</p><p>The result is that start-up investment is seen as ludicrously risky, and so the risk multiplier means that the Capital guy would be an idiot to not grab as large a percentage of the pie as possible, even before the pie is ready to go in the oven.</p><p>In addition, at the early stages, Capital guy has the Information Gradient in his favour. Two guys in a garage vs Round-A $3m...</p><p>I do have a lot of sympathy for the Capital guy though. Being out of control sucks. Capital guys doesn't have real control, beyond raising, hiring, firing and folding. So small number of Big Hammers...</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="labour-guy">Labour Guy<a class="hash-link" href="#labour-guy" title="Direct link to heading">​</a></h2><p>OK, so other side of the coin, the Labour Guy. Labour Guy has more direct control over what's produced, but they have perverse incentives (cf Adam Smith). You could work hard on what the Capital guy wants you to do, but you're also interested in increasing your pile. How to do that? A smart Labour guy will be trading off working full tilt on the Project, setting up their own Project, maybe gouging for salary while the going is good.</p><p>But again the Information Gradient kicks in. Capital guy has identified that there's a large risk, and so will be holding as much of the pie as possible for as long as possible. Labour guy can bake that pie, but won't go full tilt if he's not going to get any. It's a zero-sum game.</p><p>Again, Information Gradient = inefficient market.</p><p>So we get the weirdness of two groups, who if they cooperated with each other could build The Thing, expecting that it's a zero sum game and, using the tools each have to hand, trying to maximise their own return not the important thing, which is to see whether That Thing is useful in the market.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="dreamcatcher">Dreamcatcher<a class="hash-link" href="#dreamcatcher" title="Direct link to heading">​</a></h2><p>AXIOM: Dreamcatcher intends to reduce and ultimately remove the inefficiencies we see now in Innovation.
From the Capital guy's point of view, the ideal situation is that the Labour guy is working full tilt on the Project. Ie, there's zero Information Gradient between what the Capital guy wants and what the Labour guy wants.</p><p>From the Labour guy's point of view, the ideal situation is that the Capital guy will give him his full worth of the effort he puts in. Ie, there's zero Information Gradient between what the Capital guy wants and what the Labour guy wants.</p><p><img loading="lazy" src="/assets/images/Labor_capital_balance-981f029551c689692d5a5f8443b54bd5.jpg" width="1485" height="839" class="img_ev3q"></p><p>So there's a potential here that there is no information gradient, and that both groups have exactly the same incentives
And that's my point. Dreamcatcher isn't anti-capital, anti-rent-seakers (although I hate rent-seekers). It is about working towards making Innovation maximally efficient, which isn't a zero-sum game. If it works, everyone benefits...
@everyone Feel passionately about this. Know we have a lot going back and forth, but would love it if one of you guys would kick the shit out of what I've said above. Right now, for me, that reduction in inefficiency of innovation is everything, and we need to lead with that not being a zero-sum game...</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Inverted Applications]]></title>
        <id>/2021/03/18/inverted-applications</id>
        <link href="https://dreamcatcher.land/blog/2021/03/18/inverted-applications"/>
        <updated>2021-03-18T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><img loading="lazy" src="/assets/images/inverted_applications-7dfbef9e72c11ed17714654dadb6c345.jpg" width="800" height="350" class="img_ev3q"></p><p>Distributed apps at best can have tamper detection.</p><p>Decentralized apps at best can have censor resistance.</p><p>Consider then a github clone with a central token. Once roughly 51% of all the governance tokens have been controlled, which could be done by censoring maybe three or four people if not distributed well, then the entire app is at the will of the censor. Worse, perhaps the underlying blockchain is overthrown somehow - then the github token goes down as collateral (excuse the pun) damage. The problem is confounded by the requirement that surviving blockchain operators need to communicate with each other, as forking is considered a system failure. This repeated communication makes them easy targets. Yes, the system could start again as soon as the first copy re-appears and starts operating, but during that window the censor is in control - supression is the norm.</p><p>An inverted version of github makes its own dedicated set of blockchains for each git repo that anyone wishes to host. These apps might communicate with each other, and might even trade using some currency selections. They might share block producers, they might not.</p><p>To take down an inverted app requires finding all the blockhosts and all the key owners of all the github repos that every get created using this means of operation. The problem is far thornier than the other classes of apps. We believe this is censorship proof operation - if a censor can find every actor who is running a copy of the software. Whole subsegments of user can go offnet, and run local only. You can only supress what you can detect, and so this is the worst possible scenario of any censorship effort - we should strive for this, and not accept inferior systems that offer anything less that censorship proof apps for everyday users.</p><p>Email is an example of a sort of inverted app. It has massive distribution, it is not centrally controlled. The central control however, is exerted by the DNS namespace, and the IP allocation tables of the internet. but it has many of the characteristics, and its wild spread indicates the scale for these types of apps. It could be that email is the simplest form of such a thing, as it really just does transmission and receiving. More complex and more useful interactions such as long form stateful collaborations have yet to see such an exlosion, but git offers a glimpse of what that could be like. If only git came with its own independent version of github wrapped around every repo that was created. Its components lack the resilience and internal integrity necessary to travel thru many inverted instances unaltered.</p><p>The first inverted app is the dreamcatcher. Each idea is free floating, owned by its creator and optionally private. Then projects are created - themselves a form of idea - to capture these ideas, seek missing ideas, and refine them into something usable. Each project is entirely sovereign to itself, optionally run by whomever has compute capacity to do so. It is completely free of any centralized token control, system control, or even version control. It can, at the freewill of its owners, communicate with other organisms such as itself, or with other external systems such as email.</p><p>The spreading of a codebase creates a desire for future improvements to that program. This is primarily how we get paid, and the service we are offering - future improvements quickly, of quality. The more people get copies of our software, the more pressure is created.</p><p>The power of enduring social pressure. The emergent will of a thousand whispers.</p><p>Inverted apps put their consumer first, and coordinate while being fractured into many pieces. inverted apps harness the inverted capital allocation mechanisms enabled by dreamcatchers to perform functions in line with the benefit of their consumers, not their controllers. Distributed apps spread the operation of an application across multiple physical machines with control held by a central entity. Almost all cloud applications that hope to offer any kind of reliability operate in this way. Decentralized apps are distributed apps that spread the central control amongst many entities, often dynamically. Whilst the control may be spread around, the central control is still fiercely present, usually in the form of a token as a central registry of intent. Inverted apps are the opposite of these forms, in that there is no central coordination of intent, but rather any central tendencies emerges, without force or registration, and are apparent when entities communicate. For example, the collection of all bitcoin chain forks is a crude form of inverted app - the forks do not communicate well with each other, but their central token registries are at least partially split from each other to serve the needs of their respective user groups, and sometimes they coordinate via exchanges where overall, the utility of cryptocurrencies of this class is enhanced. Inverted apps can easily wrap controlled apps, but controlled apps are incapable of wrapping inverted. Inverted can wrap inverted. Inverted can emulate controlled where needed. Almost all blockchains could currently be classed as perverted apps - proporting to offer freedom, but really having no more structure than a public company with central product and distributed public shareholdings. These operations have no future.</p><p>an inverted exchange is different to an exchange on a blockchain. True inversion means that any partipant can come and go if the possess commodity electronics. Ethereum for example you need to have ETH, then you need assets on the chain - the list of barriers goes on and on. An inverted exchange would let people peer with one another and find the best prices. Yes there would appear aggregators, but these would be assistants, and easily replaced at any time they stop being useful.</p><p><img loading="lazy" alt="No SaaS" src="/assets/images/no-more-software-7f0bf35734eb2392d46e0393f283fd37.png" width="277" height="182" class="img_ev3q"></p><p>A new software delivery model for SaaS is <a href="https://goteleport.com/blog/open-core-vs-saas-intro/" target="_blank" rel="noopener noreferrer">emerging</a></p>]]></content>
        <category label="infosec" term="infosec"/>
        <category label="privacy" term="privacy"/>
        <category label="tor" term="tor"/>
        <category label="blockchain" term="blockchain"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[The Value of Structured Dissent]]></title>
        <id>/2021/02/22/Structured-Dissent</id>
        <link href="https://dreamcatcher.land/blog/2021/02/22/Structured-Dissent"/>
        <updated>2021-02-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Dreamcatcher aims to provide a mechanism for alternate views on all aspects of a Project not only to co-exist, but to combine to improve that project and all Forks of that project.]]></summary>
        <content type="html"><![CDATA[<p>Dreamcatcher aims to provide a mechanism for alternate views on all aspects of a Project not only to co-exist, but to combine to improve that project and all Forks of that project.</p><p>This stems from the belief that it’s hard to see individually what particular opinions are correct ahead of time, and that the more outlandish opinions may often be the most valuable. It also stems from the belief that in gathering many opinions, de-duplicating and combining them to become more precise, and by combining the judgement of many people in deciding their worth, we’re maximising the chance of making the right decisions.</p><p>This approach is across the board. It applies just as much to how a Project is governed, how it’s funds are spent as it does to what work should be undertaken and whether it’s complete.</p><p>That is, the method of consideration needs in itself to be open to opinion and consideration.</p><p>This is important because, generally, the closer you are to the work, the clearer your thoughts on the appropriateness of that work. Likewise, the closer you are to the overall goals, the clearer your thoughts are on those. The DC needs to capture both, filter and apply wide knowledge on assessing them.</p><p>We want to be able to capture the fringe ideas because that's where the big gains come from. We also simultaneously want to manage a wealth of fringe ideas without being paralysesed when those ideas are incompatible with each other.</p><p>The Principles are:</p><ol><li>Give us everything. It should be free and easily done to raise any level of idea, from all levels of the project from the work being done to how the project is being run to the Wishes the project is pursuing.</li><li>Then to be sensitive enough to detect which ideas are valuable, and to amplify and act on those quickly. We do this through de-duplication and merging to sort out the noise, and amplification of those views that stand the test of peer-review scrutiny.</li><li>And where agreement can’t be found, give an easy route to Fork the Project, explore both stances to see which one is actually the better, and allow a merge back in preserving the history of both.</li></ol><p>By doing this, the speed of the project to react to new circumstances or new knowledge is maximised, way beyond any traditional project
structure.</p><p>Dreamcatcher is the home for all of those lone-wolf, smart guys that have so much untapped value, but which are drowned in the rigid structures that are currently used to produce stuff.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Inverted Cloud]]></title>
        <id>/2021/02/22/inverted-cloud</id>
        <link href="https://dreamcatcher.land/blog/2021/02/22/inverted-cloud"/>
        <updated>2021-02-22T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><img loading="lazy" src="/assets/images/cloud-at-home-7ab31e4d88e01ee84437bca0db1d678b.jpg" width="1600" height="576" class="img_ev3q"></p><p>"AMD Silicon" covers wide range too:</p><ol><li>circuit designers</li><li>silicon fab</li><li>supply chain</li></ol><p>Our applications must be easily portable to this mode of operation</p><p>Need to move to open silicon, with trusted fabs</p><p>If cloud@home then the workload is rapidly relocatable, and so the customer may choose to run some base load on prem, have other load on cloud@home, and sell their spare capacity on cloud@home</p><p>cloud@home makes use of idle resources, and shares yours out too. you can have enough resiliency for standalone operation in a disaster, but can rent this capacity out when not in use</p><p>Show diagram of comparitive trust chains, latency, cost, fault tolerance of cloud configurations</p><p><a href="https://www.theregister.com/2020/07/14/google_amd_secure_vm/" target="_blank" rel="noopener noreferrer">https://www.theregister.com/2020/07/14/google_amd_secure_vm/</a>
So your chain of trust can now be as short as "AMD silicon", Which paves the way for cloud at home type scenarios where renting off a home supplier has the same security guarantees as renting off a cloud supplier</p><p>event driven workloads designed for distributed storage - so the workloads would have to be designed specifically for cloud@home unless its just small little apps</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Ambient Attribution]]></title>
        <id>/2020/12/20/ambient-attribution</id>
        <link href="https://dreamcatcher.land/blog/2020/12/20/ambient-attribution"/>
        <updated>2020-12-20T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[k]]></summary>
        <content type="html"><![CDATA[<p><em>"Mirror mirror, on the wall, who is the fairest of them all?"</em></p><p>Contents</p><ol><li>Example project funding of Interblock</li><li>Example project funding of DOS</li></ol><p>Software companies make up trillions of dollars on the stockmarket, but the best
quality software is actually free - how can we connect these two extremes to
something more sustainable, and how can we get more software, of a higher
quality, faster, and cost lest money ?</p><p>The utopian model of knowledge work is that all individuals permissionlessly contribute to whatever they are able, in whatever form they can, and can build on all prior contributions from anyone else, while receiving fair recompense based on the value they provided whenever their work is used and reused, all with zero overhead. This utopia is focused on providing pure utility to consumers, and enabling pure contribution from producers. This environment would be ideal Ambient Attribution.</p><p>To implement such perfection in our current reality needs compromise and ingenuity. A pragmatic form of Ambient Attribution as presented here has mechanisms to handle corruption, fairness discovery, attack mitigation (eg: lawsuits and corporation pressures), dishonesty, disputes, transaction costs, and management overheads, all while avoiding the perils of central system control. Whilst the perfected version may be some decades away technologically, we see within the rise of blockchains, the basic components required to implement a first iteration. This is what we set out to embody within the Dreamcatcher.</p><p>Based on two forces:</p><ol><li>fair credit due everywhere</li><li>zero friction for reuse</li></ol><p><img loading="lazy" alt="Iron Triangle of Time vs Cost vs Quality" src="/assets/images/good-fast-cheap-02cc4d4c2aa49b62bd30491906c625f3.jpg" width="1926" height="1742" class="img_ev3q"></p><p>These qualities change the bigger the pool gets <!-- -->[graphic of pool size vs ideal
match]<!-- --> Biggest pool is the lowest friction quality largely depends on the people
you have available. let us assume their is an optimal piece of work, at an
optimal price. the more people can do the work the better. less friction, zero
friction company. zero liability, zero friction, never credit. credit being
given by the worker, acting as a bank. <!-- -->[graph showing decreasing overall cost]</p><p><a target="_blank" href="/assets/files/sweat-equity-5d5230e4b10d12993269d4f2253ddc85.jpg"><img loading="lazy" src="/blog/2020-12-20-assets/sweat-equity.jpg" height="480" class="img_ev3q"></a></p><p>decreasing activation cost longer it survives, the better the quality a good
programmer on their day public scrutiny, even if perceived can be called to
account years after your coding</p><p>how much reward is fair ? surmise there is a single fair answer. self witness,
shared witness, unto others as they unto you, wisdom of crowds image should be
the same looking back, no different. how they see you should be same as how you
see them. this is shared vision - aka reality. fairness is something that looks
the same from all sides</p><p>What is fair payment ? Depend on each situation. Depends on the utility gained.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="example-funding-interblock">Example: Funding Interblock<a class="hash-link" href="#example-funding-interblock" title="Direct link to heading">​</a></h2><p>What is the prize ?</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="what-is-the-product-">What is the product ?<a class="hash-link" href="#what-is-the-product-" title="Direct link to heading">​</a></h3><p>Equity stake in the upside. Consumers of the product are politly asked for fair
payment</p><p>Types of input:</p><ol><li>Direct funds used by project command</li><li>Code contribution</li><li>Direct funded code contribution</li><li>Early customer</li></ol><p>We hope these models of labour, if successful, can have equivalents in the
physical product world.</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="restrictions-on-investment">Restrictions on investment<a class="hash-link" href="#restrictions-on-investment" title="Direct link to heading">​</a></h2><p>Any projects that we endorse must follow the following rules, which are
automated:</p><ol><li>Investors must prove they know what the project is about</li><li>Investors must be able to afford to lose their investment</li><li>Projects must have an earnest goal</li></ol><p>We are unable to register many of our projects with the SEC due to our
requirements to stay anonymous. However we support the spirit of the SEC
regulations, and we aim to exceed their intention.</p><p>To invest in a software project, you must have made a code commit of more than x
weighted value, which signals that you know what the project is about, and you
have contributed enough to be part of the enterprise - a worker, as it were -
relying on the efforts of others and yourself to show return.</p><p>Work cannot be faked, copied, or otherwise, and it makes no difference to its
utility if it was done by a machine, a person, or a small dog. It doesn't matter
if it was done in a virtual machine, bare metal, at gunpoint, or of freewill -
it is like gold - it can be tested for purity, and not counterfeited, unlike
fiat, and unlike promises, which is what fiat is.</p>]]></content>
        <category label="infosec" term="infosec"/>
        <category label="privacy" term="privacy"/>
        <category label="tor" term="tor"/>
        <category label="blockchain" term="blockchain"/>
    </entry>
    <entry>
        <title type="html"><![CDATA[Side Effect IO]]></title>
        <id>/2020/10/26/side-effects</id>
        <link href="https://dreamcatcher.land/blog/2020/10/26/side-effects"/>
        <updated>2020-10-26T00:00:00.000Z</updated>
        <content type="html"><![CDATA[<p><em>"Mixing the pure with the impure, without making everything impure"</em></p><p><img loading="lazy" src="/assets/images/mixing-droplet-cc99a7cf93ede713e25b9f9bd1091783.jpg" width="4856" height="3380" class="img_ev3q"></p><p>The work I have been doing lately could largely be described as side effect management. This is the means by which to introduce external data into the blockchain based system, in a way that does not corrupt the key blockchain property of reproducibility. That is to say, being able to rerun blocks thru different computers and verify that the same answer came out. Side effects are any external event - something that cannot be reproduced - a simple example is receiving an email. The converse is required too - being able to use the pure, clean, secure blockchain based calculations to trigger unreproducible external events. A simple example of this is sending an email.</p><p>So the work is about making something unrepeatable become something repeatable in a clean way, and to a lesser extent making something repeatable trigger unrepeatable events.</p><p>However during the work I was doing to send internet packets between Amazon and the browser the amount of code I was writing that was not blockchain related started to increase. The problem with this is that it is not reusing the code that is used for the blockchains, and so requires extra work to build and maintain, while losing the very helpful traceability properties that blockchain based calculations afford. Traceability becomes especially useful when the software is executing on remote servers.</p><p>This was the trigger for the work, but it is work that would have been required later anyway.</p><p>I have managed to get the underlying system of side effects working in prototype form, and starting from this morning I will be applying that to the internet transport ability. I am pleased with how the system is performing, and it meets my goals of being clean and simple and easy to fault find. An example of why the fault finding aspect is useful is that if you call me and say that at roughly 10am something weird happened in the app and you can't seem to make it happen again, we would be able to see the actual interactions the application made and very quickly be able to reproduce the problem, making fixing it much faster, and giving you reassurance that we did actually know what is going on, rather than having to ask you to keep an eye out for it happening again because we can't notice anything amiss.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Zero Liability Companies]]></title>
        <id>/2020/09/24/zero-liability-co</id>
        <link href="https://dreamcatcher.land/blog/2020/09/24/zero-liability-co"/>
        <updated>2020-09-24T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[When was it first invented]]></summary>
        <content type="html"><![CDATA[<p><img loading="lazy" src="/assets/images/dragon-ab1419ce479b7acd7fc9cf30df9dd6cc.jpg" width="1500" height="1500" class="img_ev3q"></p><p>When was it first invented</p><p>But the only truly zero liability company is a fully anonymous one.</p><p>Building customer trust</p><p>The only way to protect the privacy of your customers is to ensure they remain anoymous.</p><p><img loading="lazy" alt="Current Labour Flows" src="/assets/images/economy-d606caca4ff3bcb7b2fd4f9a960bd520.png" width="882" height="662" class="img_ev3q"></p><p>Switching cost for customers is high, so they will tolerate erosion of value before switching. Also company 1 and the livelihoods of all their staff are destroyed by a mass switch, when perhaps the majority of the company did good work. Then the process repeats again for company 2.</p><p>We propose a means by which there is really only one company, and the members cooperate at whim, and the consumers pay down whichever paths suit them best.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="outsourcing-your-identity-management-requirements">Outsourcing your identity management requirements.<a class="hash-link" href="#outsourcing-your-identity-management-requirements" title="Direct link to heading">​</a></h3><p>In such an ecosystem, the dangerous job of correlating identities need only be managed by a handful of services.</p><h3 class="anchor anchorWithStickyNavbar_LWe7" id="exceeding-quality-of-registered-companies">Exceeding quality of registered companies<a class="hash-link" href="#exceeding-quality-of-registered-companies" title="Direct link to heading">​</a></h3><p>Companies do bad things all the time. Clearly being registered is no guarantee of good behaviour. With zero liability, the responsibily shifts onto the community to maintain opinion... This correlates with a shift in social mob justice of suspected bad actors.</p><p>Complete anonymity and business models that still work (hopefully!) even tho buy side and sell side do not know who each other are.</p><p>Making a functioning revenue stream when there is no force available - how to make money from open source software.</p><p>Transparency of companies is somewhat like how on a unix system, the operating system is largely readable by all users, but only writable by a trusted few. It helps the users to know whats going on.</p><p>We only care about the work generated. Work is hard, and full of thorns as the level of detail increases. Being zero liability and anonymous frees people to focus solely on the work, and frees consumers to look only at the value of that work to them, independent of any other forces that can alter perception away from cold purity of value. It is then up to the producer to choose to declare what they have done - this is optional, whereas under the current systems it is required, and criminally punished.</p><p>Moreover, we have implemented ways in which people can partially declare properties about themselves and their work rather than a full destruction of privacy. For example you can declare yourself a tax resident of x country for the projects you contributed there, and you can pay tax to that country, but you need not assosciate your name with it.</p><p>The bringers of novel knowledge are often unwelcomed, some violently so (references). For this reason, the Dreamcatcher network is designed such that any contributors of work or funds are free to stay anonymous, and at their wish only reveal as much as they wish. They can also release graduated information rather than all or nothing. Indeed consumers within the network also can operate this way, and share any portion of their consumption data on the network</p><h2 class="anchor anchorWithStickyNavbar_LWe7" id="operating-activities">Operating Activities<a class="hash-link" href="#operating-activities" title="Direct link to heading">​</a></h2><ol><li>Real life promotion (conferences, videos, friends)</li><li>Online Promotion (forums, emails, blogs)</li><li>Code commits</li><li>Issue posting</li><li>TESTING Amazon deployments using serverless.com tooling</li><li>PRODUCTION Amazon deployments using serverless.com tooling</li></ol><p>the concept of the zero liability company only the code matters</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Race for Mechanized Innovation]]></title>
        <id>/2019/05/22/race-for-mechanized-invention</id>
        <link href="https://dreamcatcher.land/blog/2019/05/22/race-for-mechanized-invention"/>
        <updated>2019-05-22T00:00:00.000Z</updated>
        <summary type="html"><![CDATA[Why the panic to create an invention machine ? One of the founders of Dreamcatcher Inc describes the burden carried by all those who know how to let the genie out of the bottle, and the consequences of delayed release.]]></summary>
        <content type="html"><![CDATA[<p>Why the panic to create an invention machine ? One of the founders of Dreamcatcher Inc describes the burden carried by all those who know how to let the genie out of the bottle, and the consequences of delayed release.</p><p>5/22/19, 14:13 - 🦄: What about all the people dying around the world because of cures not yet invented? Is it our fault, if it makes a cure, and say 10 people died in the previous 3 months, and we're like "remember that three months we fucked around for?"</p><p>5/22/19, 14:15 - ☢️: Shit that’s a good point.</p><p>5/22/19, 14:15 - ☢️: Zero tolerance of delay.</p><p>5/22/19, 14:20 - 🦄: Fuck man. Is that an unreasonable burden to put on us?</p><p>5/22/19, 14:20 - ☢️: Erm, no...</p><p>5/22/19, 14:21 - ☢️: Unless you fancy quitting 🤣</p><p>5/22/19, 14:21 - 🦄: Just cuz we know what it is, now it's our burden to make it?</p><p>5/22/19, 14:21 - ☢️: Yes, precisely</p><p>5/22/19, 14:23 - ☢️: So cast your mind forward until you’re 80 years old. Starting to lose it but not yet. Pissing yourself occasionally. Multiple things fucking up your body. Guys born 30 years, 40 years after you now calling the shots. Then ask what you want to do with the time between then and now. How to get those guys harnessing all of those kick-ass concepts that are lost to the wind...</p><p>5/22/19, 14:24 - ☢️: Or leave it to them and hope someone else comes up with an Invention Machine...</p><p>5/22/19, 14:24 - ☢️: Never know, maybe someone will</p><p>5/22/19, 14:24 - ☢️: My guess is they won’t</p><p>5/22/19, 14:25 - ☢️: Because they’ll still be stuck by the stuff we’re trying to unstick</p><p>5/22/19, 14:26 - ☢️: So what, we have maybe 40 years useful left. 8800 days of work. About 70,000 hours</p><p>5/22/19, 14:27 - ☢️: And there goes another 4 from the time we called <!-- -->*<!-- -->*<!-- -->*<!-- --> this morning</p><p><img loading="lazy" alt="tick tock mf" src="/assets/images/tick-tock-debate-me-efea8a01f04e1906203bc4b7a3f5c3b3.gif" width="498" height="325" class="img_ev3q"></p><p>5/22/19, 14:27 - ☢️: Tick tock motherfucker…</p><p>5/22/19, 14:28 - ☢️: Then game over</p><p>5/22/19, 14:28 - ☢️: So, given all that. How long should we fuck around with the likes of <!-- -->*<!-- -->*<!-- -->*<!-- -->?</p><p>5/22/19, 14:28 - ☢️: A year so far. Or about 2000 of those hours...</p><p>5/22/19, 14:29 - ☢️: It’s taken about 35,000 hours just to get to this point...</p><p>5/22/19, 14:29 - ☢️: One third gone</p><p>5/22/19, 14:30 - ☢️: Two thirds left</p><p>5/22/19, 14:32 - ☢️: “Despite this success, more than 3 million people die from vaccine-preventable diseases each year. Approximately 1.5 million of these deaths are in children less than 5 years old”</p><p>5/22/19, 14:33 - ☢️: So say there’s an invention the Invention Machine will find that stops 0.1% of that.</p><p>5/22/19, 14:34 - ☢️: Three months delay isn’t 10 people. It’s 750...</p><p>5/22/19, 14:35 - ☢️: And fucking around with <!-- -->*<!-- -->*<!-- -->*<!-- --> is 3000...</p><p>5/22/19, 14:36 - ☢️: There’s huge value in getting something done by painting a vision. We can’t do this all the way just the two of us, but we can define the story others rally around</p><p>5/22/19, 14:38 - ☢️: “Just cuz we know what it is, now it's our burden to make it?” Yes, it is. Bring it on!</p><p><img loading="lazy" alt="3000 people" src="/assets/images/3000-people-fdcd6555a44cab3fc9b3f347b2c63a90.png" width="512" height="260" class="img_ev3q"></p><p>This is what 3000 people look like...</p><p>5/22/19, 14:41 - ☢️: Bear in mind you’re talking to the guy who thought he was about to kill 45,000 in 30 days at a 95% assurance of 70% probability in order to save 60,000,000...</p><p>5/22/19, 14:45 - ☢️: So, sense of urgency? Hell yes</p>]]></content>
    </entry>
</feed>