"use strict";(self.webpackChunk_dreamcatcher_tech_dreamcatcher_website=self.webpackChunk_dreamcatcher_tech_dreamcatcher_website||[]).push([[7466],{3161:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>n,default:()=>c,frontMatter:()=>s,metadata:()=>l,toc:()=>u});var i=a(7462),o=(a(7294),a(3905));a(1839);const s={},n="R10 Request-Idea",l={unversionedId:"Requests/R10",id:"Requests/R10",title:"R10 Request-Idea",description:"Version",source:"@site/pool/Requests/R10.md",sourceDirName:"Requests",slug:"/Requests/R10",permalink:"/pool/Requests/R10",draft:!1,editUrl:"https://github.com/dreamcatcher-tech/dreamcatcher-tech.github.io/edit/master/website/pool/Requests/R10.md",tags:[],version:"current",frontMatter:{},sidebar:"pool",previous:{title:"Dreamcatcher Gateway",permalink:"/pool/"},next:{title:"Requests",permalink:"/pool/Requests/"}},r={},u=[{value:"Version",id:"version",level:2},{value:"Targets",id:"targets",level:2},{value:"Dependencies",id:"dependencies",level:2},{value:"Strategic Intent",id:"strategic-intent",level:2},{value:"Tactical Intent",id:"tactical-intent",level:2},{value:"Detailed Description",id:"detailed-description",level:2},{value:"Tactical Intent 1: Define what a Request and an Idea is.",id:"tactical-intent-1-define-what-a-request-and-an-idea-is",level:3},{value:"Must",id:"must",level:4},{value:"Should",id:"should",level:4},{value:"Could",id:"could",level:4},{value:"Should Not",id:"should-not",level:4},{value:"Must not",id:"must-not",level:4},{value:"Tactical Intent 2: Enter the general app ideas into the manual system",id:"tactical-intent-2-enter-the-general-app-ideas-into-the-manual-system",level:3},{value:"Must",id:"must-1",level:4},{value:"Should",id:"should-1",level:4},{value:"Could",id:"could-1",level:4},{value:"Should Not",id:"should-not-1",level:4},{value:"Tactical Intent 3: Use the process itself to improve the process using github issues and git commits to the .md files.",id:"tactical-intent-3-use-the-process-itself-to-improve-the-process-using-github-issues-and-git-commits-to-the-md-files",level:3},{value:"Must",id:"must-2",level:4}],d={toc:u};function c(e){let{components:t,...s}=e;return(0,o.kt)("wrapper",(0,i.Z)({},d,s,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"r10-request-idea"},"R10 Request-Idea"),(0,o.kt)("h2",{id:"version"},"Version"),(0,o.kt)("p",null,"v1.0, dated 12 May 2022"),(0,o.kt)("p",null,(0,o.kt)("img",{alt:"request and lightbulb manual hand cranked cogs Watercolor",src:a(6391).Z,width:"256",height:"256"})),(0,o.kt)("h2",{id:"targets"},"Targets"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("a",{parentName:"li",href:"/dust/"},"R01 Dreamcatcher"))),(0,o.kt)("h2",{id:"dependencies"},"Dependencies"),(0,o.kt)("h2",{id:"strategic-intent"},"Strategic Intent"),(0,o.kt)("p",null,"How to catch a Dream ?"),(0,o.kt)("p",null,"The goal of the Dreamcatcher is how to go from an incoherent utterance to a reusable asset using Request/Idea pairing. This pairing is based on splitting out the pure problem as a Request and allowing any number of Ideas to be proposed to meet that Request. Conditional Funding is then applied to these items, and paid out upon completion, providing a form of natural selection causing evolution."),(0,o.kt)("p",null,"Requests avoid the solutioneering problem, where selection bias dominates, maximizing the open mindedness of the system. Ideas promote maximal reuse of works of knowledge by being pure solution, being applicable to areas not originally thought of, thereby maximizing return on investment of effort"),(0,o.kt)("p",null,"We have a number of possible App ideas floating about that we hope to use the Dreamcatcher to complete, but not in Request/Idea format. It is possible to test the Dreamcatcher Concept internally using git and markdown documents. If we cannot use our own system to manage our own expenditure of resources, then our concept must be fatally flawed."),(0,o.kt)("p",null,"Particularly we aim for a system with self improvement, and so we must experience this self improvement directly to fundamentally understand it, and to fix its deficiencies. Moreover because we believe it is the fastest way to do any kind of knowledge work, if it works as we expect, it will be the fastest way for us to do our own internal work."),(0,o.kt)("p",null,"The overall aim is to get the absolute minimum version of the Dreamcatcher operating in manual mode, where the minimum version is a knowledge work producing system that can self improve. We must refuse to operate in any other way, or declare abject failure. This is in order to test the processes involved more easily and earlier than would otherwise be possible, and serves solely as a stepping stone to the development of the software version which will automate much of this. To this end, it is the software version that's the final goal."),(0,o.kt)("h2",{id:"tactical-intent"},"Tactical Intent"),(0,o.kt)("p",null,"To do this, we need to:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Define what a Request and an Idea is"),(0,o.kt)("li",{parentName:"ol"},"Enter the general app ideas into the manual system"),(0,o.kt)("li",{parentName:"ol"},"Use the process itself to improve the process using github issues and git commits to the .md files.")),(0,o.kt)("h2",{id:"detailed-description"},"Detailed Description"),(0,o.kt)("h3",{id:"tactical-intent-1-define-what-a-request-and-an-idea-is"},"Tactical Intent 1: Define what a Request and an Idea is."),(0,o.kt)("h4",{id:"must"},"Must"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"List the concept count required for the implementation by counting the number of items in the Dictionary that need to be used during the execution of this simple system"),(0,o.kt)("li",{parentName:"ol"},"Define the minimum possible Dreamcatcher features using concept count as a comparison"),(0,o.kt)("li",{parentName:"ol"},"Define a Pool where Requests and Ideas enter a marketplace for funding"),(0,o.kt)("li",{parentName:"ol"},"Define a Quality Assurance actor to control minimum standard of the Pool and declare Requests and Ideas as Completed"),(0,o.kt)("li",{parentName:"ol"},"Produce written material that is presented on the website with every commit"),(0,o.kt)("li",{parentName:"ol"},"Use AI generated NFT artwork for each Request and Idea."),(0,o.kt)("li",{parentName:"ol"},"Handle staking of virtual money against Requests and Ideas")),(0,o.kt)("h4",{id:"should"},"Should"),(0,o.kt)("p",null,"Always have a single operating version agreed upon between participants"),(0,o.kt)("h4",{id:"could"},"Could"),(0,o.kt)("p",null,"Manage actual money"),(0,o.kt)("h4",{id:"should-not"},"Should Not"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Attempt to cover edge cases"),(0,o.kt)("li",{parentName:"ol"},"Solve problems that will only exist for the manual version of the Dreamcatcher")),(0,o.kt)("h4",{id:"must-not"},"Must not"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Involve any documentation outside of the ",(0,o.kt)("a",{parentName:"li",href:"/"},"Dreamcatcher Website")," for docs")),(0,o.kt)("h3",{id:"tactical-intent-2-enter-the-general-app-ideas-into-the-manual-system"},"Tactical Intent 2: Enter the general app ideas into the manual system"),(0,o.kt)("h4",{id:"must-1"},"Must"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Enter some of the Ideas into the Pool"),(0,o.kt)("li",{parentName:"ol"},"Produce at least one Request for each App Idea that enters the Pool")),(0,o.kt)("h4",{id:"should-1"},"Should"),(0,o.kt)("h4",{id:"could-1"},"Could"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Extend or test the content of those App concepts"),(0,o.kt)("li",{parentName:"ol"},"Leave a substantial number as stub Requests or Ideas")),(0,o.kt)("h4",{id:"should-not-1"},"Should Not"),(0,o.kt)("h3",{id:"tactical-intent-3-use-the-process-itself-to-improve-the-process-using-github-issues-and-git-commits-to-the-md-files"},"Tactical Intent 3: Use the process itself to improve the process using github issues and git commits to the .md files."),(0,o.kt)("h4",{id:"must-2"},"Must"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Be actively used by at least two actors."),(0,o.kt)("li",{parentName:"ol"},"Go through at least 2 rounds of process self improvement")))}c.isMDXComponent=!0},6391:(e,t,a)=>{a.d(t,{Z:()=>i});const i=a.p+"assets/images/R10-8be1e43c60f77c376479fde63db80898.png"}}]);